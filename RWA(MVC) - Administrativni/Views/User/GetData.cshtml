@model X.PagedList.StaticPagedList<User>
@using Microsoft.AspNetCore.Mvc.Core
@using X.PagedList.Mvc.Core

<h1>Users</h1>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Created At</th>
            <th>Deleted At</th>
            <th>User Name</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Password Hash</th>
            <th>Password Salt</th>
            <th>Phone</th>
            <th>Is Confirmed</th>
            <th>Security Token</th>
            <th>Country Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.CreatedAt</td>
                <td>@user.DeletedAt</td>
                <td>@user.Username</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>@user.PwdHash</td>
                <td>@user.PwdSalt</td>
                <td>@user.Phone</td>
                <td>@user.IsConfirmed</td>
                <td>@user.SecurityToken</td>

                <td>
                    @{
                        var countries = ViewData["Countries"] as List<Country>;
                        var country = countries?.FirstOrDefault(c => c.Id == user.CountryOfResidenceId);
                    }
                    @country?.Name
                </td>


                <td><a href="User/View/@user.Id" class="btn btn-dark">View</a></td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("GetData", new { page }))
</div>
<style>


    .pagination a {
        margin: 0 10px;
        color: darkred; 
        text-decoration:none; 
       
    }
   

</style>
